using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace PowerAutomateForCrmSolution
{
	// Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
	// To generate Base64 string for Images below, you can use https://www.base64-image.de/
	[Export(typeof(IXrmToolBoxPlugin)),
		ExportMetadata("Name", "PowerAutomateCloudForCrmSolution"),
		ExportMetadata("Description", "Provide ability to create a new crm cloud PowerAutomate workflow using common data service connectors and add it to selected crm solution. Works with OAuth or Certifcate type connections only."),
		// Please specify the base64 content of a 32x32 pixels image
		ExportMetadata("SmallImageBase64", "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"),
		// Please specify the base64 content of a 80x80 pixels image
		ExportMetadata("BigImageBase64", ""),
		ExportMetadata("BackgroundColor", "Lavender"),
		ExportMetadata("PrimaryFontColor", "Black"),
		ExportMetadata("SecondaryFontColor", "Gray")]
	public class MyPlugin : PluginBase
	{
		public override IXrmToolBoxPluginControl GetControl()
		{
			return new MyPluginControl();
		}

		/// <summary>
		/// Constructor 
		/// </summary>
		public MyPlugin()
		{
			// If you have external assemblies that you need to load, uncomment the following to 
			// hook into the event that will fire when an Assembly fails to resolve
			// AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
		}

		/// <summary>
		/// Event fired by CLR when an assembly reference fails to load
		/// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
		/// For example, a folder named Sample.XrmToolBox.MyPlugin 
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="args"></param>
		/// <returns></returns>
		private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
		{
			Assembly loadAssembly = null;
			Assembly currAssembly = Assembly.GetExecutingAssembly();

			// base name of the assembly that failed to resolve
			var argName = args.Name.Substring(0, args.Name.IndexOf(","));

			// check to see if the failing assembly is one that we reference.
			List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
			var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

			// if the current unresolved assembly is referenced by our plugin, attempt to load
			if (refAssembly != null)
			{
				// load from the path to this plugin assembly, not host executable
				string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
				string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
				dir = Path.Combine(dir, folder);

				var assmbPath = Path.Combine(dir, $"{argName}.dll");

				if (File.Exists(assmbPath))
				{
					loadAssembly = Assembly.LoadFrom(assmbPath);
				}
				else
				{
					throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
				}
			}

			return loadAssembly;
		}
	}
}